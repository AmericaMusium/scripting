/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <engine>
#include <fakemeta>
#include <fakemeta_util>
#include <fun>
#include <dodx>
#include <dodfun>
#include <dodconst>
#include <dodstats>
#include <hamsandwich>


#define PLUGIN "DOD GROUND MORTAR"
#define VERSION "27jul2022"
#define AUTHOR "[America][TheVaskov]"




#define GMORTAR_MAXALL 64
#define GMORTAR_MAXHAVE 5
#define GMORTAR_SETDIST 150.0
#define GMORTAR_RADDAM 200.0
#define GMORTAR_DAMAGE 44.0


new const g_gmcname[] = "groundmortar" //Classname нашего entity

new const g_gmmdl[] = "models/mapmodels/hk_mortar.mdl" // Модель
new const gentSpriteExplode[] = "sprites/explosion1.spr" //Спрайт взрыва
new const gentSpriteSmoke[] = "sprites/puff.spr" //Спрайт дыма
new gent_Sprite[3] //Сюда запишем индексы спрайтов


new g_gm_limit[33]
new g_gm_owner[2048]
new g_maxgm
new g_MessageFade, gMsgDeathMsg, gMsgFrags


// new p_friendlyfire


public plugin_init()
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_touch(g_gmcname, "player", "EntityTouch") //Создаем событие прикосновение с entity
	// register_forward(FM_Touch, "EntityTouch", 1)
	// register_think(g_gmcname, "EntityThink") //Создаем событие действий entity
	
	
	register_clcmd("say /gmor", "create_gmortar") //Команда для создание
	// register_clcmd("say /delete", "DeleteAllMines") //Команда для создание	
	
	
	
	register_event("HLTV", "Del_all_gmortars", "a", "1=0", "2=0")
	
	g_MessageFade = get_user_msgid("ScreenFade") //  регистрирует глоб месседж
	gMsgDeathMsg = get_user_msgid("DeathMsg")
	gMsgFrags = get_user_msgid("Frags")
	
	
	RegisterHam(Ham_TakeDamage, "info_target", "fw_takedamage");
	register_forward(FM_CmdStart,"anttroop_button") // регистрируем форвард для открытия меню по кнопке е
	
	
	// p_friendlyfire = get_cvar_pointer("mp_friendlyfire")
}
public gmortar_button(id, uc_handle)// функция, которая реализует открытие меню на кнопку е
{
static Button, OldButtons;
Button = get_uc(uc_handle, UC_Buttons);
OldButtons = pev(id, pev_oldbuttons);

if((Button & IN_USE) && !(OldButtons & IN_USE))
	create_gmortar(id)
	
}


public plugin_precache()
{
	precache_model( g_gmmdl ) //Передаем в прекаш модель
	gent_Sprite[1] = precache_model( gentSpriteExplode ) //Передаем в прекаш спрайт взрыва
	gent_Sprite[2] = precache_model( gentSpriteSmoke ) //Передаем в прекаш спрайт дыма
} 

public Del_all_gmortars(){
	
	new gment  = engfunc(EngFunc_FindEntityByString, 0, "model", g_gmmdl) // cоздаём переменную присваем номер через функцию
	while(gment != 0){
		/// пока энтити не равна нолю и если она больше то удаляем
		if(gment > 0){
			remove_entity(gment)
			// client_print(0,print_chat,"Removed %d", gment)
			g_maxgm= 0
		}
		
		gment = engfunc(EngFunc_FindEntityByString, 0, "model", g_gmmdl)
		if(gment == 0) {
			// client_print(0,print_chat,"Removed alll")
			
			g_maxgm= 0
			gment = 0
			break
			/// а вот она теперь равна нолю
		}
	}	
	
	for(new id = 0 ; id < get_maxplayers() ; id++){
		g_gm_limit[id] = 0
	}
}		

public create_gmortar(id)
{
	if(is_user_connected(id) && is_user_alive(id)){
		new iOrigin[3] //Создаем массив для хранение координат
		new iOrigin1[3] // игрока ориджэин
		get_user_origin(id, iOrigin, 3) //Получаем координаты куда смотрит игрок
		get_user_origin(id, iOrigin1, 0) // координаты игрока
		
		new Float:fOrigin[3] //Создаем массив для float коодинат
		IVecFVec(iOrigin, fOrigin) //Конвертируем координаты в дробные \ берём точку трассировки зрения
		
		// new gment = engfunc(EngFunc_CreateNamedEntity,engfunc(EngFunc_AllocString,"info_target"))
		new gment = create_entity("info_target")	// создаём Энтити
		set_pev(gment, pev_origin, fOrigin) //Присваиваем координаты точки зрения	
		
		
		if(!pev_valid(gment)) 
			{//Проверяем сущетсвует ли, если нет
		return  //Заканчиваем. Дальше нам делать нечего
	}
	
	//set_pev(gment, pev_health, 1.0);
	//set_pev(gment, pev_takedamage, DAMAGE_YES);
	set_pev(gment, pev_classname, g_gmcname) //Присваиваем Classname
	set_pev(gment, pev_solid, SOLID_BBOX) //Делаем его непроходимым
	set_pev(gment, pev_movetype, MOVETYPE_NONE) //Не задаем тип движения, во всяком случаи пока
	// set_pev(gment, pev_sequence, 0) //Выставляем № анимации при создании
	// set_pev(gment, pev_framerate, 1.0) //Выставляем скорость анимации
	
	new units = get_entity_distance(id,gment) // берём дистанцию между хозяином и миной
	// client_print(id,print_chat,"Distance to mine %d units", units) // вывод информации
	
	if(units > GMORTAR_SETDIST || g_maxgm>= GMORTAR_MAXALL || g_gm_limit[id] >= GMORTAR_MAXHAVE)  // если расстоняние более 150 , или колво макс мин больше то удаляем
	{ 
		remove_entity(gment)
		// client_print(id,print_chat,"You can not set mine: Distance: %d / %f | Actived mines on ground %d / %d ",units, GMORTAR_SETDIST, g_gm_limit[id], GMORTAR_MAXHAVE )
		
	}
	else{
		/// ну а если не больше 150 то выполняем этот код
		
		// g_maxgmortars++
		g_gm_limit[id]++
		g_gm_owner[gment] = id
		
		// set_pev(gment, pev_nextthink, get_gametime() + 1.0) //Создаем запуск think
		
		emit_sound(id,CHAN_VOICE,"weapons/bazookareloadshovehome.wav",0.8,ATTN_NORM,0,PITCH_NORM + random_num(-30, -20)) // звук установки
		engfunc(EngFunc_SetModel, gment, g_gmmdl) //Присваиваем модель
		engfunc(EngFunc_SetSize, gment, Float:{-6.0, -6.0, -3.0}, Float:{6.0, 6.0, 45.0}) //Создаем бокс вокруг entity( для прикосновения и не только )
		
		
		set_task(2.0, "gm_attack", gment )
		// set_task(2.0, gm_attack, gment)
		
	}
}
return PLUGIN_HANDLED
} 

///////////////////////////////////////////////
public gm_attack(gment) {

new gmentOrigin[3]
pev(gment,pev_origin,gmentOrigin)


message_begin(MSG_BROADCAST,SVC_TEMPENTITY) //Создаем сообщение
write_byte(TE_EXPLOSION) //Индекс сообщение(взрыва)
engfunc(EngFunc_WriteCoord, gmentOrigin[0]) //Координата x
engfunc(EngFunc_WriteCoord, gmentOrigin[1]) //Координата y
engfunc(EngFunc_WriteCoord, gmentOrigin[2] + 30.0) //Координата z
write_short(gent_Sprite[1]) //Индекс спрайта взрыва
write_byte(6) //Размер спрайта
write_byte(15) //Скорость анимации
write_byte(0) //Флаги
message_end() //Конец сообщение

message_begin(MSG_BROADCAST,SVC_TEMPENTITY)//Создаем сообщение
write_byte(TE_SMOKE) //Индекс сообщение(дым)
engfunc(EngFunc_WriteCoord, gmentOrigin[0]) //Координата x
engfunc(EngFunc_WriteCoord, gmentOrigin[1]) //Координата y
engfunc(EngFunc_WriteCoord, gmentOrigin[2] + 50.0) //Координата x
write_short(gent_Sprite[2]) //Индекс спрайта дыма
write_byte(15) //Размер спрайта
write_byte(10) //Скорость анимации
message_end() //Конец сообщение



message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
write_byte(TE_DLIGHT)
write_coord(gmentOrigin[0])
write_coord(gmentOrigin[1])
write_coord(gmentOrigin[2])
write_byte(5)
write_byte(12)
write_byte(252)
write_byte(199)
write_byte(2)
write_byte(25)
message_end()

/*
message_begin(MSG_BROADCAST, SVC_TEMPENTITY);
write_byte(TE_WORLDDECAL);
engfunc(EngFunc_WriteCoord, fOriginE[0]);
engfunc(EngFunc_WriteCoord, fOriginE[1]);
engfunc(EngFunc_WriteCoord, fOriginE[2]);
write_byte(60);
message_end();
*/

set_task(2.0, "gm_attack", gment )
set_task(3.0, "gm_damage", gment )


}
public scr_shake(id)
{


new gmsgShake = get_user_msgid("ScreenShake")
message_begin(MSG_ONE, gmsgShake, {0,0,0}, id)
write_short(255<<14) //ammount
write_short(10<<14) //lasts this long
write_short(255<<14) //frequency
message_end()


}

public gm_damage(gment) {



new iPlayers[32] //Создаем массив для хранение индексов игроков
new iPlayer, iNum //Для записи кол-во игроков и отдельный взятый индекс
new VictimId

get_players(iPlayers, iNum, "ach") //Получаем игроков, исключая мертвых, ботов и hltv

VictimId = random_num(1, iNum)


// scr_shake(VictimId)

new Float:fOrigPl[3] //Создаем массив для float координат игрока
pev(VictimId, pev_origin, fOrigPl) //Получаем координаты игрока

fOrigPl[0] += random_float(- 400.0 , 400.0)
fOrigPl[1] += random_float(- 400.0 , 400.0)
fOrigPl[2] += random_float(1.0 , 2.0)



message_begin(MSG_ALL,SVC_TEMPENTITY)
write_byte(TE_DLIGHT)
write_coord(fOrigPl[0])
write_coord(fOrigPl[1])
write_coord(fOrigPl[2])
write_byte(5)
write_byte(12)
write_byte(252)
write_byte(199)
write_byte(2)
write_byte(25)
message_end()


message_begin(MSG_ALL,SVC_TEMPENTITY) //Создаем сообщение
write_byte(TE_EXPLOSION) //Индекс сообщение(взрыва)
engfunc(EngFunc_WriteCoord, fOrigPl[0]) //Координата x
engfunc(EngFunc_WriteCoord, fOrigPl[1]) //Координата y
engfunc(EngFunc_WriteCoord, fOrigPl[2] - 20.0) //Координата z
write_short(gent_Sprite[1]) //Индекс спрайта взрыва
write_byte(4) //Размер спрайта
write_byte(15) //Скорость анимации
write_byte(random_num(0,6)) //Флаги
message_end() //Конец сообщение



}





/*

for(new i; i < iNum; i++) //Создаем цикл по всем игрокам
{
iPlayer = iPlayers[i] //Для удобства записываем отдельно

new Float:fOrigPl[3] //Создаем массив для float координат игрока
pev(iPlayer, pev_origin, fOrigPl) //Получаем координаты игрока

*/



