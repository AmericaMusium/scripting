/* Plugin generated by AMXX-Studio 
----------------------------------------------------------------------------------------------------

INFO:

Make alittle smoke trail after grenades when they are thrown. The trail is either one color for all
nades or you can set it to be a team color, see CVARS. 

All trail colors are in RGB format!

CREDIT:

DoD:S ??

CHANGELOG:


----------------------------------------------------------------------------------------------------

CVARS and default settings:

- plugin on/off |  1 = on 0 = off
"dod_grenade_trial" "1"

- use team color or not |  1 = on 0 = off
"dod_grenade_trial_team_color" "0"

- default trail colors 
"dod_nt_default_1" "105"	// r
"dod_nt_default_2" "105"	// g 
"dod_nt_default_3" "105" 	// b

- trail size 
"dod_nt_default_size" "15"


- allies trail colors 
"dod_nt_allies_1" "0"		// r
"dod_nt_allies_2" "139"		// g 
"dod_nt_allies_3" "0"		// b

- trail size 
"dod_nt_allies_size" "10"


- axis trail colors 
"dod_nt_axis_1" "139" 		// r
"dod_nt_axis_2" "0"		// g 
"dod_nt_axis_3" "0" 		// b

- trail size 
"dod_nt_axis_size" "10"	

---------------------------------------------------------------------------------------------------- 
*/	
////////////////////////////////////////////////////////////////////////////////////////////////////
#include <amxmodx>
#include <dodfun>
////////////////////////////////////////////////////////////////////////////////////////////////////
#define PLUGIN "DoD Grenade trail"
#define VERSION "v1.0 by Dr.G"
#define AUTHOR "Dr.G"
////////////////////////////////////////////////////////////////////////////////////////////////////
#define DEBUG 0
////////////////////////////////////////////////////////////////////////////////////////////////////
new p_on, p_team_depended
new trail_spr
new def_co0, def_co1, def_co2 
new axis_co0, axis_co1, axis_co2 
new allies_co0, allies_co1, allies_co2
new def_size, allies_size, axis_size
////////////////////////////////////////////////////////////////////////////////////////////////////
public plugin_init() 
{
	/* reg plugin and public tracking */
	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_cvar("dod_gt_stats",VERSION,FCVAR_SERVER|FCVAR_SPONLY)
	
	/* plugin on/off */
	p_on = register_cvar("dod_grenade_trial", "1")
	
	/* use team color or not */
	p_team_depended = register_cvar("dod_grenade_trial_team_color", "0")
	
	/* default trail colors */
	def_co0 = register_cvar("dod_nt_default_1","105") 	// r
	def_co1 = register_cvar("dod_nt_default_2","105") 	// g 
	def_co2 = register_cvar("dod_nt_default_3","105") 	// b
	def_size = register_cvar("dod_nt_default_size","10")	/* trail size */
	
	/* allies trail colors */
	allies_co0 = register_cvar("dod_nt_allies_1","0")	// r
	allies_co1 = register_cvar("dod_nt_allies_2","139")	// g 
	allies_co2 = register_cvar("dod_nt_allies_3","0")	// b
	allies_size = register_cvar("dod_nt_allies_size","10")	/* trail size */
	
	/* axis trail colors */
	axis_co0 = register_cvar("dod_nt_axis_1","139")		// r
	axis_co1 = register_cvar("dod_nt_axis_2","0")		// g 
	axis_co2 = register_cvar("dod_nt_axis_3","0")		// b
	axis_size = register_cvar("dod_nt_axis_size","10")	/* trail size */
	
}
////////////////////////////////////////////////////////////////////////////////////////////////////
public plugin_precache()
{
	trail_spr = precache_model("sprites/smoke_ia.spr") 
	/* alternative sprites -> smoke.spr || xsmoke3.spr */
}
////////////////////////////////////////////////////////////////////////////////////////////////////
public grenade_throw(id,nadeid)
{
	if(!get_pcvar_num(p_on))
		return PLUGIN_HANDLED
	
	if(get_pcvar_num(p_team_depended))
	{
		new team = get_user_team(id)
		
		switch(team) 
		{
			case 1:allies_smoke(nadeid)
				
			case 2:axis_smoke(nadeid)	
		}
		return PLUGIN_HANDLED
	}
	else default_smoke(nadeid)
	return PLUGIN_HANDLED
}
////////////////////////////////////////////////////////////////////////////////////////////////////
stock allies_smoke(nadeid)
{
	message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
	write_byte(TE_BEAMFOLLOW)
	write_short(nadeid)
	write_short(trail_spr)
	write_byte(10)
	write_byte(get_pcvar_num(allies_size))
	write_byte(get_pcvar_num(allies_co0))
	write_byte(get_pcvar_num(allies_co1))
	write_byte(get_pcvar_num(allies_co2))
	write_byte(255)
	message_end()
	#if DEBUG
	client_print(0, print_chat,"allies nade")
	#endif
	return PLUGIN_HANDLED
}
////////////////////////////////////////////////////////////////////////////////////////////////////
stock axis_smoke(nadeid)
{
	message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
	write_byte(TE_BEAMFOLLOW)
	write_short(nadeid)
	write_short(trail_spr)
	write_byte(10)
	write_byte(get_pcvar_num(axis_size))
	write_byte(get_pcvar_num(axis_co0))
	write_byte(get_pcvar_num(axis_co1))
	write_byte(get_pcvar_num(axis_co2))
	write_byte(255)
	message_end()
	#if DEBUG
	client_print(0, print_chat,"axis nade")
	#endif
	return PLUGIN_HANDLED
}
////////////////////////////////////////////////////////////////////////////////////////////////////
stock default_smoke(nadeid)
{
	message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
	write_byte(TE_BEAMFOLLOW)
	write_short(nadeid)
	write_short(trail_spr)
	write_byte(10)
	write_byte(get_pcvar_num(def_size))
	write_byte(get_pcvar_num(def_co0))
	write_byte(get_pcvar_num(def_co1))
	write_byte(get_pcvar_num(def_co2))
	write_byte(7)
	message_end()
	#if DEBUG
	client_print(0, print_chat,"default")
	#endif
	return PLUGIN_HANDLED
}
////////////////////////////////////////////////////////////////////////////////////////////////////
/*
from hlsdk_const.inc

#define TE_BEAMFOLLOW 22
write_byte(TE_BEAMFOLLOW)
write_short(entity:attachment to follow)
write_short(sprite index)
write_byte(life in 0.1's) 
write_byte(line width in 0.1's) 
write_byte(red)
write_byte(green)
write_byte(blue)
write_byte(brightness)
*/
////////////////////////////////////////////////////////////////////////////////////////////////////
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1049\\ f0\\ fs16 \n\\ par }
*/
