/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <engine>
#include <fakemeta>
#include <fakemeta_util>
#include <fun>
#include <dodx>
#include <dodfun>
#include <dodconst>
#include <dodstats>
#include <hamsandwich>
#include <xs>

#define PLUGIN "DOD Semiclip"
#define VERSION "1.0"
#define AUTHOR "[America][TheVaskov]"

new g_iMaxPlayers

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	
	g_iMaxPlayers = get_maxplayers()
	
	
	register_clcmd("say smcl", "find_playerboxpvs2") 
	
	// register_forward(FM_Touch, "")
	
	// register_forward(FM_ShouldCollide, "FM_ShouldCollide_PreFn", false);
	// Add your code here...
}
//////////// 

public find_playerboxpvs(id){ 
	
	
	if(!is_user_alive(id) || !is_user_connected(id))  return PLUGIN_HANDLED
	
	static class[32];
	static ent, chain;
	ent = engfunc(EngFunc_EntitiesInPVS, id);
	while(ent)
	{
		chain = pev(ent, pev_chain);
		// pev(ent, pev_origin, point);
		pev(ent, pev_classname, class, charsmax(class));
		if(equal(class, "player") && ent != 0)
		{
			
			new id2 = ent
			new id1t = get_user_team(id)
			new id2t = get_user_team(id2)
			new di1i2 = get_entity_distance(id, id2)
			
			 
		
		if(id1t == id2t && di1i2 < 50) {
			
			set_pev(id, pev_solid, SOLID_NOT)
			set_pev(id2, pev_solid, SOLID_NOT)
			
			server_print("[semiclip] solid not ")
			
			client_print(0,print_chat, "[semiclip] solid not (ent:%i class:%s) dist %d", ent, class, di1i2)
			
			set_task(1.3, "find_playerboxpvs", id)
			set_task(1.5, "find_playerboxpvs", id2)
		}
		
		if(id1t == id2t && di1i2 > 50) {
			
				new faza1 = pev(id, pev_solid)
				new faza2 = pev(id2, pev_solid)
				
				if(faza1 == 0) set_pev(id, pev_solid, SOLID_SLIDEBOX)
				if(faza2 == 0) set_pev(id2, pev_solid, SOLID_SLIDEBOX)
				
				
				client_print(0,print_chat, "[semiclip] RETURN FAZA OKEY)")
				
					}
			
		}
		
		if(!chain)
			break;
		
		ent = chain;
	}
	return PLUGIN_HANDLED;
}


 //////////////////////// find player 
 /*
public fn_smclfindp(id)
{
new entityList[32]
new idplayers = find_sphere_class(id, "player", 150.0, entityList, sizeof entityList)


server_print("[semiclip]  start search ")
if (idplayers > 0)
{
	// Found that many weaponboxes near the dog
	
	// If you need to get the closest one, sort the array
	new data[1]
	data[0] = id
	SortCustom1D(entityList, idplayers, "semiclipsort")
	
	// if(!is_user_alive(entityList[0]) || !is_user_connected(entityList[0])) 
	
	if(entityList[0] != id && is_user_alive(entityList[0]) && is_user_connected(entityList[0])){
		
		
		new id2 = entityList[0]
		new id1t = get_user_team(id)
		new id2t = get_user_team(id2)
		
		
		if(id1t == id2t) {
			
			set_pev(id, pev_solid, SOLID_NOT)
			set_pev(id2, pev_solid, SOLID_NOT)
			
			server_print("[semiclip] solid not ")
		}
	}
}
				}
			
public semiclipsort(elem1, elem2, const array[], const data[], data_size)
{
new id = data[0]

new dTo1 = get_entity_distance(id,elem1)
new dTo2 = get_entity_distance(id,elem2)


if (dTo1 < dTo2)
{
	return -1
}

if (dTo1 > dTo2)
{
	return 1
}

return 0
}
*/



public find_playerboxpvs2(id){ 
	
	
	if(!is_user_alive(id) || !is_user_connected(id))  return PLUGIN_HANDLED
	
	new entityList[32]	
	new id2 = find_sphere_class(id, "player", 50.0, entityList, sizeof entityList)
	
	
	// for (new id = 1; id <= g_iMaxPlayers; id++)
	
	if(id2 > 0 &&  is_user_alive(id2) && is_user_connected(id2) && id != id2)
			{
		
			
			
			new id1t = get_user_team(id)
			new id2t = get_user_team(id2)
			new faza1 = pev(id2, pev_solid)
			if(faza1 == 0 && id1t != id2t) set_pev(id2, pev_solid, SOLID_SLIDEBOX)
		
		if(id1t == id2t) {
			
			set_pev(id2, pev_solid, SOLID_NOT)
			
			client_print(0,print_chat, "[semiclip] solid not +")
			// set_task(1.3, "find_playerboxpvs", id)

				}
		
			
			}
			
	
	// if(faza1 == 0 && !id2) set_pev(id2, pev_solid, SOLID_SLIDEBOX)
	
	
	return PLUGIN_HANDLED;
}

/*

		if(id1t == id2t && di1i2 > 50) {
			
				new faza1 = pev(id, pev_solid)
				new faza2 = pev(id2, pev_solid)
				
				if(faza1 == 0) set_pev(id, pev_solid, SOLID_SLIDEBOX)
				if(faza2 == 0) set_pev(id2, pev_solid, SOLID_SLIDEBOX)
				
				
				client_print(0,print_chat, "[semiclip] RETURN FAZA OKEY)")
				
					}
					
					*/
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1049\\ f0\\ fs16 \n\\ par }
*/
